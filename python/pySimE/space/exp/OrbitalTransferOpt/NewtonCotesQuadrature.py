#!/usr/bin/env python

from pylab import *

#def f1(t): 	return (1-(1-(1.5*t)**2)**2)**2

def f1(t): 	return (  (0.138-t)*(0.5454-t)*(0.8354-t) )**2.0
def f1(t): 	return (  t*(t-1)*(0.138-t)*(0.5454-t)*(0.8354-t) )**2.0
#def f1(t): 	return ( 1/(0.1+(0.1-t)*(0.8-t)*(0.6-t))-10  ) 

ts = arange(0,1,0.001);
NCC = [
 [    1/2.0,          1/2.0],
 [    1/6.0,          2/3.0,           1/6.0 ],
 [    1/8.0,          3/8.0,           3/8.0,         1/8.0  ],
 [    7/90.0,        16/45.0,          2/15.0,       16/45.0,       7/90.0 ],
 [   19/288.0,       25/96.0,         25/144.0,      25/144.0,     25/96.0,       19/288.0 ],
 [   41/840.0,        9/35.0,          9/280.0,      34/105.0,      9/280.0,       9/35.0,       41/840.0 ], 
 [  751/17280.0,   3577/17280.0,      49/640.0,    2989/17280.0, 2989/17280.0,    49/640.0,    3577/17280.0,  751/17280.0 ],
 [  989/28350.0,   2944/14175.0,    -464/14175.0,  5248/14175.0, -454/2835.0,   5248/14175.0,  -464/14175.0, 2944/14175.0,     989/28350.0 ],
 [ 2857/89600.0,  15741/89600.0,      27/2240.0,   1209/5600.0,  2889/44800.0,  2889/44800.0,  1209/5600.0,    27/2240.0,    15741/89600.0,   2857/89600.0 ],
 [16067/598752.0, 26575/149688.0, -16175/199584.0, 5675/12474.0,  -4825/11088.0, 17807/24948.0, -4825/11088.0, 5675/12474.0,  -16175/199584.0, 26575/149688.0, 16067/598752.0 ]
]



def NewtonCotesQuadrature( a, b, f, degree=1):
	xs = arange( a,b+0.00000001, 1.0/degree )
	coefs = array( NCC[degree-1] )
	#print xs
	#print coefs 
	ys = f(xs)
	return (b-a)*sum(ys*coefs)

for i in range(1,10+1):
	integral= NewtonCotesQuadrature( 0.0,1.0, f1, degree=i)
	print " NCC[",i,"] Integral = ",integral



print "check = ", sum(f1(ts))/1000;


plot( ts, f1(ts) );

show()